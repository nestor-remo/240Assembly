     1                                 %line 1+1 macro.asm
     2                                 
     3                                 
     4                                 
     5                                 
     6                                 
     7                                 
     8                                 
     9                                 
    10                                 
    11                                 
    12                                 
    13                                 
    14                                 
    15                                 
    16                                 
    17                                 
    18                                 
    19                                 
    20                                 
    21                                 
    22                                 
    23                                 
    24                                 
    25                                 
    26                                 
    27                                 
    28                                 
    29                                 
    30                                 
    31                                 
    32                                 
    33                                 
    34                                 
    35                                 
    36                                 
    37                                 
    38                                 %line 44+1 macro.asm
    39                                 
    40                                 %line 52+1 macro.asm
    41                                 
    42                                 [section .bss]
    43 00000000 <gap>                   buffer resb 4
    44 00000004 <gap>                   n resw 1
    45 00000006 <gap>                   sumN resw 1
    46                                 
    47                                 [section .data]
    48 00000000 496E7075742061206E-     msg1 db "Input a number (100~255): "
    49 00000000 756D62657220283130-
    50 00000000 307E323535293A20   
    51 0000001A 31202B2032202B2033-     msg2 db "1 + 2 + 3 +...+ "
    52 0000001A 202B2E2E2E2B20     
    53 0000002A 203D20                  msg3 db " = "
    54 0000002D 30303030300A            ascii db "00000", 10
    55                                 
    56                                 [section .text]
    57                                 [global _start]
    58                                 
    59                                 _start:
    60 00000000 48C7C001000000          mov rax, 1
    61                                 %line 68+0 macro.asm
    62 00000007 48C7C701000000          mov rdi, 1
    63 0000000E 48C7C6[00000000]        mov rsi, msg1
    64 00000015 48C7C21A000000          mov rdx, 26
    65 0000001C 0F05                    syscall
    66                                 %line 69+1 macro.asm
    67 0000001E 48C7C000000000          mov rax, 0
    68                                 %line 69+0 macro.asm
    69 00000025 48C7C700000000          mov rdi, 0
    70 0000002C 48C7C6[00000000]        mov rsi, buffer
    71 00000033 48C7C204000000          mov rdx, 4
    72 0000003A 0F05                    syscall
    73                                 %line 70+1 macro.asm
    74                                 
    75 0000003C 66B80000                mov ax, 0
    76 00000040 66BB0A00                mov bx, 10
    77 00000044 48C7C600000000          mov rsi, 0
    78                                 
    79                                 next0:
    80 0000004B 8A8E[00000000]          mov cl,byte[buffer+rsi]
    81 00000051 80A6[00000000]0F        and byte[buffer+rsi], 0f
    82 00000058 0286[00000000]          add al, byte[buffer+rsi]
    83 0000005E 80D400                  adc ah, 0
    84 00000061 888E[00000000]          mov byte[buffer+rsi], cl
    85 00000067 4883FE02                cmp rsi, 2
    86 0000006B 7401                    je skip0
    87 0000006D 66F7E3                  mul bx
    88                                 
    89                                 skip0:
    90 00000070 48FFC6                  inc rsi
    91 00000073 4883FE03                cmp rsi, 3
    92 00000077 7CD0                    jl next0
    93 00000079 66890425[00000000]      mov word[n], ax
    94                                 
    95 00000081 66B90000                mov cx, 0
    96                                 
    97                                 next1:
    98 00000085 66010C25[00000000]      add word[sumN], cx
    99 0000008D 66FFC1                  inc cx
   100 00000090 663B0C25[00000000]      cmp cx, word[n]
   101 00000098 76E9                    jbe next1
   102                                 
   103 0000009A 48C7C704000000          mov rdi, 4
   104 000000A1 668B0425[00000000]      mov ax, word[sumN]
   105                                 
   106                                 next2:
   107 000000A9 66BA0000                mov dx, 0
   108 000000AD 66BB0A00                mov bx, 10
   109 000000B1 66F7F3                  div bx
   110 000000B4 0097[00000000]          add byte[ascii+rdi], dl
   111 000000BA 48FFCF                  dec rdi
   112 000000BD 4883FF00                cmp rdi, 0
   113 000000C1 7DE4                    jge next2
   114                                 
   115 000000C3 48C7C001000000          mov rax, 1
   116                                 %line 111+0 macro.asm
   117 000000CA 48C7C701000000          mov rdi, 1
   118 000000D1 48C7C6[00000000]        mov rsi, msg2
   119 000000D8 48C7C210000000          mov rdx, 16
   120 000000DF 0F05                    syscall
   121                                 %line 112+1 macro.asm
   122 000000E1 48C7C001000000          mov rax, 1
   123                                 %line 112+0 macro.asm
   124 000000E8 48C7C701000000          mov rdi, 1
   125 000000EF 48C7C6[00000000]        mov rsi, msg3
   126 000000F6 48C7C203000000          mov rdx, 3
   127 000000FD 0F05                    syscall
   128                                 %line 113+1 macro.asm
   129 000000FF 48C7C001000000          mov rax, 1
   130                                 %line 113+0 macro.asm
   131 00000106 48C7C701000000          mov rdi, 1
   132 0000010D 48C7C6[00000000]        mov rsi, ascii
   133 00000114 48C7C206000000          mov rdx, 6
   134 0000011B 0F05                    syscall
   135                                 %line 114+1 macro.asm
   136                                 
   137 0000011D 48C7C03C000000          mov rax, 60
   138 00000124 48C7C700000000          mov rdi, 0
   139 0000012B 0F05                    syscall
