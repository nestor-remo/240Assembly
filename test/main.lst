     1                                 %line 8+1 main.asm
     2                                 
     3                                 %line 16+1 main.asm
     4                                 
     5                                 [section .data]
     6 00000000 456E746572204F7065-     prompt db "Enter Operations String: "
     7 00000000 726174696F6E732053-
     8 00000000 7472696E673A20     
     9 00000019 3030300A                ascii db "000", 10
    10 0000001D 203D20                  msg2 db " = "
    11                                 
    12                                 [section .bss]
    13 00000000 <gap>                   buffer resb 9
    14                                 
    15                                 [section .text]
    16                                 [global _start]
    17                                 
    18                                 _start:
    19 00000000 48C7C001000000         mov rax, 1
    20                                 %line 29+0 main.asm
    21 00000007 48C7C701000000         mov rdi, 1
    22 0000000E 48C7C6[00000000]       mov rsi, prompt
    23 00000015 48C7C219000000         mov rdx, 25
    24 0000001C 0F05                   syscall
    25                                 %line 30+1 main.asm
    26                                 
    27 0000001E 48C7C000000000         mov rax, 0
    28                                 %line 31+0 main.asm
    29 00000025 48C7C700000000         mov rdi, 0
    30 0000002C 48C7C6[00000000]       mov rsi, buffer
    31 00000033 48C7C209000000         mov rdx, 9
    32 0000003A 0F05                   syscall
    33                                 %line 32+1 main.asm
    34 0000003C 48C7C001000000         mov rax, 1
    35                                 %line 32+0 main.asm
    36 00000043 48C7C701000000         mov rdi, 1
    37 0000004A 48C7C6[00000000]       mov rsi, buffer
    38 00000051 48C7C209000000         mov rdx, 9
    39 00000058 0F05                   syscall
    40                                 %line 33+1 main.asm
    41                                 
    42 0000005A B800000000              mov eax, 0
    43 0000005F B32B                    mov bl, '+'
    44 00000061 48C7C6[00000000]        mov rsi, buffer
    45                                 
    46                                 lp:
    47 00000068 803E00                  cmp byte [rsi], 0
    48 0000006B 7455                    je pres
    49                                 
    50 0000006D 803E2B                  cmp byte [rsi], '+'
    51 00000070 743B                    je padd
    52                                 
    53 00000072 803E2D                  cmp byte [rsi], '-'
    54 00000075 743A                    je psub
    55                                 
    56 00000077 803E2A                  cmp byte [rsi], '*'
    57 0000007A 7439                    je pmul
    58                                 
    59 0000007C 803E2F                  cmp byte [rsi], '/'
    60 0000007F 7438                    je pdiv
    61                                 
    62 00000081 80260F                  and byte [rsi], 0f
    63                                 
    64 00000084 80FB2B                  cmp bl, '+'
    65 00000087 740F                    je add_
    66 00000089 80FB2D                  cmp bl, '-'
    67 0000008C 740E                    je sub_
    68 0000008E 80FB2A                  cmp bl, '*'
    69 00000091 740D                    je mul_
    70 00000093 80FB2F                  cmp bl, '/'
    71 00000096 740C                    je div_
    72 00000098 EB28                    jmp pres
    73                                 
    74                                 add_:
    75 0000009A 0206                    add al, byte[rsi]
    76 0000009C EB1F                    jmp skip0
    77                                 
    78                                 sub_:
    79 0000009E 2A06                    sub al, byte [rsi]
    80 000000A0 EB1B                    jmp skip0
    81                                 
    82                                 mul_:
    83 000000A2 F626                    mul byte [rsi]
    84 000000A4 EB17                    jmp skip0
    85                                 
    86                                 div_:
    87 000000A6 BA00000000              mov edx, 0
    88 000000AB F636                    div byte [rsi]
    89 000000AD EB0E                    jmp skip0
    90                                 
    91                                 padd:
    92 000000AF B32B                    mov bl, '+'
    93 000000B1 EB0A                    jmp skip0
    94                                 
    95                                 psub:
    96 000000B3 B32D                    mov bl, '-'
    97 000000B5 EB06                    jmp skip0
    98                                 
    99                                 pmul:
   100 000000B7 B32A                    mov bl, '*'
   101 000000B9 EB02                    jmp skip0
   102                                 
   103                                 pdiv:
   104 000000BB B32F                    mov bl, '/'
   105 000000BD EBFE                    jmp skip0
   106                                 
   107                                 skip0:
   108 000000BF 48FFC6                  inc rsi
   109 000000C2 EBA2                    jmp lp
   110                                 
   111                                 pres:
   112 000000C4 48C7C102000000          mov rcx, 2
   113 000000CB 66BB0A00                mov bx, 10
   114                                 next2:
   115 000000CF 4831D2                  xor rdx, rdx
   116 000000D2 66F7F3                  div bx
   117 000000D5 0091[00000000]          add byte[ascii+rcx], dl
   118 000000DB 48FFC9                  dec rcx
   119 000000DE 4883F900                cmp rcx, 0
   120 000000E2 7DE9                    jge next2
   121                                 
   122 000000E4 48C7C001000000         mov rax, 1
   123                                 %line 114+0 main.asm
   124 000000EB 48C7C701000000         mov rdi, 1
   125 000000F2 48C7C6[00000000]       mov rsi, msg2
   126 000000F9 48C7C203000000         mov rdx, 3
   127 00000100 0F05                   syscall
   128                                 %line 115+1 main.asm
   129 00000102 48C7C001000000         mov rax, 1
   130                                 %line 115+0 main.asm
   131 00000109 48C7C701000000         mov rdi, 1
   132 00000110 48C7C6[02000000]       mov rsi, ascii+2
   133 00000117 48C7C202000000         mov rdx, 2
   134 0000011E 0F05                   syscall
   135                                 %line 116+1 main.asm
   136                                 
   137                                 end:
   138 00000120 48C7C03C000000          mov rax, 60
   139 00000127 48C7C700000000          mov rdi, 0
   140 0000012E 0F05                    syscall
